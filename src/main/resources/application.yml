
spring:
    application:
        name: EDMIDC-Producer-Service
    kafka:
        consumer:
            auto-offset-reset: earliest
            bootstrap-servers: localhost:${KAFKA_PORT}
            group-id: group_id
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        producer:
            acks: -1
            bootstrap-servers: localhost:${KAFKA_PORT}
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.apache.kafka.common.serialization.StringSerializer
        topic: ${TOPIC_NAME:edmidc-bitcoin-cdc}
        errorTopic: ${ERROR_TOPIC:error-message-cdc}
    resource:
        url: ${RESOURCE_URL:https://api.coinlore.net/api/ticker/?id=90}
        measurementName: ${RESOURCE_MEASUREMENT_NAME:Subject}
        tag: ${RESOURCE_TAG:tag}
        frequency: ${RESOURCE_FREQUENCY:0 * * * * *}

    datasource:
        url: jdbc:postgresql://localhost:${POSTGRES_PORT:5432}/${POSTGRES_DB:heartbeatDB}
        username: ${POSTGRES_USER:edmidcUser}
        password: ${POSTGRES_PASSWORD:edmidc}
    jpa:
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
management:
    server:
        port: ${SERVER_PORT:8081}
    endpoints:
        web:
            exposure:
                include: [ "prometheus" ]
#     TODO           check these might be differenyt for prometheus
server:
    port: ${SERVER_PORT:8081}
    servlet:
        context-path: /
